[{"E:\\React\\fourth_mid\\src\\index.js":"1","E:\\React\\fourth_mid\\src\\App.js":"2","E:\\React\\fourth_mid\\src\\components\\InputForm.js":"3","E:\\React\\fourth_mid\\src\\components\\ResultTable.js":"4","E:\\React\\fourth_mid\\src\\components\\Header.js":"5"},{"size":255,"mtime":1686630816000,"results":"6","hashOfConfig":"7"},{"size":1721,"mtime":1689222183244,"results":"8","hashOfConfig":"7"},{"size":3261,"mtime":1689220781854,"results":"9","hashOfConfig":"7"},{"size":1049,"mtime":1689222352155,"results":"10","hashOfConfig":"7"},{"size":303,"mtime":1689222272059,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16f5qxc",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"E:\\React\\fourth_mid\\src\\index.js",[],[],"E:\\React\\fourth_mid\\src\\App.js",[],[],"E:\\React\\fourth_mid\\src\\components\\InputForm.js",["29"],[],"import styles from \"./InputForm.module.css\";\r\nimport { useState } from \"react\";\r\nconst InputForm = function (props) {\r\n  const [inputCurr, setInputCurr] = useState(\"\");\r\n  const [inputSav, setInputSav] = useState(\"\");\r\n  const [inputIntrs, setInputIntrs] = useState(\"\");\r\n  const [inputDurn, setInputDurn] = useState(\"\");\r\n\r\n  const submitHandler = function (e) {\r\n    e.preventDefault();\r\n    console.log(\"SUbmitted\");\r\n    const res = {\r\n      \"current-savings\": inputCurr,\r\n      \"yearly-contribution\": inputSav,\r\n      \"expected-return\": inputIntrs,\r\n      duration: inputDurn,\r\n    };\r\n\r\n    for (const property in res) {\r\n      if (res[property].trim().length == 0) {\r\n        alert(\"Put all input field correctly\");\r\n        return;\r\n      }\r\n    }\r\n    // for (let key in res) {\r\n    //   if (res.hasOwnProperty(key)) {\r\n    //     res[key] = +res[key];\r\n    //   }\r\n    // }\r\n\r\n    props.onSubmit(res);\r\n    console.log(res);\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    console.log(\"logged\");\r\n    setInputCurr(\"\");\r\n    setInputSav(\"\");\r\n    setInputIntrs(\"\");\r\n    setInputDurn(\"\");\r\n  };\r\n\r\n  const inputCurrHandler = (event) => {\r\n    setInputCurr(event.target.value);\r\n    // console.log(event.target.value);\r\n  };\r\n  const inputSavHandler = (event) => {\r\n    setInputSav(event.target.value);\r\n    //console.log(event.target.value);\r\n  };\r\n  const inputIntrsHandler = (event) => {\r\n    setInputIntrs(event.target.value);\r\n    //console.log(event.target.value);\r\n  };\r\n  const inputDurnHandler = (event) => {\r\n    setInputDurn(event.target.value);\r\n    //console.log(event.target.value);\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler} className={styles.form}>\r\n      <div className={styles[\"input-group\"]}>\r\n        <p>\r\n          <label htmlFor=\"current-savings\">Current Savings ($)</label>\r\n          <input\r\n            onChange={inputCurrHandler}\r\n            type=\"number\"\r\n            id=\"current-savings\"\r\n            value={inputCurr}\r\n          />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"yearly-contribution\"\r\n            value={inputSav}\r\n            onChange={inputSavHandler}\r\n          />\r\n        </p>\r\n      </div>\r\n      <div className={styles[\"input-group\"]}>\r\n        <p>\r\n          <label htmlFor=\"expected-return\">\r\n            Expected Interest (%, per year)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"expected-return\"\r\n            value={inputIntrs}\r\n            onChange={inputIntrsHandler}\r\n          />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"duration\">Investment Duration (years)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"duration\"\r\n            value={inputDurn}\r\n            onChange={inputDurnHandler}\r\n          />\r\n        </p>\r\n      </div>\r\n      <p className={styles.actions}>\r\n        <button\r\n          type=\"reset\"\r\n          onClick={resetHandler}\r\n          className={styles.buttonAlt}\r\n        >\r\n          Reset\r\n        </button>\r\n        <button type=\"submit\" className={styles.button}>\r\n          Calculate\r\n        </button>\r\n      </p>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","E:\\React\\fourth_mid\\src\\components\\ResultTable.js",[],[],"E:\\React\\fourth_mid\\src\\components\\Header.js",[],[],[],{"ruleId":"30","severity":1,"message":"31","line":20,"column":39,"nodeType":"32","messageId":"33","endLine":20,"endColumn":41},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]