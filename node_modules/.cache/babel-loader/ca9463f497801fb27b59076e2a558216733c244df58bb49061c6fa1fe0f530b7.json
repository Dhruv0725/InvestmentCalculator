{"ast":null,"code":"import _slicedToArray from\"E:/React/fourth_mid/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import InputForm from\"./components/InputForm\";import ResultTable from\"./components/ResultTable\";import{useState}from\"react\";import Header from\"./components/Header\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),userInput=_useState2[0],setUserInput=_useState2[1];var calculateHandler=function calculateHandler(userInput){setUserInput(userInput);};var yearlyData=[];if(userInput){var currentSavings=+userInput[\"current-savings\"];// feel free to change the shape of this input object!\nvar yearlyContribution=+userInput[\"yearly-contribution\"];// as mentioned: feel free to change the shape...\nvar expectedReturn=+userInput[\"expected-return\"]/100;var duration=+userInput[\"duration\"];var invested=currentSavings;console.log(currentSavings,yearlyContribution,expectedReturn,duration);var totalInterest=0;for(var i=0;i<duration;i++){var yearlyInterest=currentSavings*expectedReturn;totalInterest+=yearlyInterest;invested+=yearlyContribution;currentSavings+=yearlyInterest+yearlyContribution;yearlyData.push({// feel free to change the shape of the data pushed to the array!\nyear:i+1,savingsEndOfYear:currentSavings,yearlyInterest:yearlyInterest,totalInterest:totalInterest,invested:invested});console.log(yearlyData);}}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(InputForm,{onSubmit:calculateHandler}),!userInput&&/*#__PURE__*/_jsx(\"p\",{style:{textAlign:\"center\"},children:\"No investment Calculated yet\"}),userInput&&/*#__PURE__*/_jsx(ResultTable,{results:yearlyData})]});}export default App;","map":{"version":3,"names":["InputForm","ResultTable","useState","Header","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","userInput","setUserInput","calculateHandler","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","invested","console","log","totalInterest","i","yearlyInterest","push","year","savingsEndOfYear","children","onSubmit","style","textAlign","results"],"sources":["E:/React/fourth_mid/src/App.js"],"sourcesContent":["import InputForm from \"./components/InputForm\";\nimport ResultTable from \"./components/ResultTable\";\nimport { useState } from \"react\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  const [userInput, setUserInput] = useState(null);\n\n  const calculateHandler = (userInput) => {\n    setUserInput(userInput);\n  };\n\n  const yearlyData = [];\n  if (userInput) {\n    let currentSavings = +userInput[\"current-savings\"]; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput[\"yearly-contribution\"]; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput[\"expected-return\"] / 100;\n    const duration = +userInput[\"duration\"];\n    let invested = currentSavings;\n    console.log(currentSavings, yearlyContribution, expectedReturn, duration);\n    let totalInterest = 0;\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      totalInterest += yearlyInterest;\n      invested += yearlyContribution;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        savingsEndOfYear: currentSavings,\n        yearlyInterest: yearlyInterest,\n        totalInterest: totalInterest,\n        invested: invested,\n      });\n\n      console.log(yearlyData);\n    }\n  }\n\n  return (\n    <div>\n      <Header />\n      <InputForm onSubmit={calculateHandler}></InputForm>\n      {!userInput && (\n        <p style={{ textAlign: \"center\" }}>No investment Calculated yet</p>\n      )}\n      {userInput && <ResultTable results={yearlyData}></ResultTable>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"yGAAA,MAAO,CAAAA,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,OAASC,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEzC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,IAAAC,SAAA,CAAkCP,QAAQ,CAAC,IAAI,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAzCG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAE9B,GAAM,CAAAI,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIF,SAAS,CAAK,CACtCC,YAAY,CAACD,SAAS,CAAC,CACzB,CAAC,CAED,GAAM,CAAAG,UAAU,CAAG,EAAE,CACrB,GAAIH,SAAS,CAAE,CACb,GAAI,CAAAI,cAAc,CAAG,CAACJ,SAAS,CAAC,iBAAiB,CAAC,CAAE;AACpD,GAAM,CAAAK,kBAAkB,CAAG,CAACL,SAAS,CAAC,qBAAqB,CAAC,CAAE;AAC9D,GAAM,CAAAM,cAAc,CAAG,CAACN,SAAS,CAAC,iBAAiB,CAAC,CAAG,GAAG,CAC1D,GAAM,CAAAO,QAAQ,CAAG,CAACP,SAAS,CAAC,UAAU,CAAC,CACvC,GAAI,CAAAQ,QAAQ,CAAGJ,cAAc,CAC7BK,OAAO,CAACC,GAAG,CAACN,cAAc,CAAEC,kBAAkB,CAAEC,cAAc,CAAEC,QAAQ,CAAC,CACzE,GAAI,CAAAI,aAAa,CAAG,CAAC,CACrB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGL,QAAQ,CAAEK,CAAC,EAAE,CAAE,CACjC,GAAM,CAAAC,cAAc,CAAGT,cAAc,CAAGE,cAAc,CACtDK,aAAa,EAAIE,cAAc,CAC/BL,QAAQ,EAAIH,kBAAkB,CAC9BD,cAAc,EAAIS,cAAc,CAAGR,kBAAkB,CACrDF,UAAU,CAACW,IAAI,CAAC,CACd;AACAC,IAAI,CAAEH,CAAC,CAAG,CAAC,CACXI,gBAAgB,CAAEZ,cAAc,CAChCS,cAAc,CAAEA,cAAc,CAC9BF,aAAa,CAAEA,aAAa,CAC5BH,QAAQ,CAAEA,QACZ,CAAC,CAAC,CAEFC,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC,CACzB,CACF,CAEA,mBACER,KAAA,QAAAsB,QAAA,eACExB,IAAA,CAACF,MAAM,GAAE,CAAC,cACVE,IAAA,CAACL,SAAS,EAAC8B,QAAQ,CAAEhB,gBAAiB,CAAY,CAAC,CAClD,CAACF,SAAS,eACTP,IAAA,MAAG0B,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAH,QAAA,CAAC,8BAA4B,CAAG,CACnE,CACAjB,SAAS,eAAIP,IAAA,CAACJ,WAAW,EAACgC,OAAO,CAAElB,UAAW,CAAc,CAAC,EAC3D,CAAC,CAEV,CAEA,cAAe,CAAAP,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}